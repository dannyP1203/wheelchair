<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- MATERIALS -->
	
	
	<!-- Base Link -->
	<gazebo reference="base_link">
		<material>Gazebo/SkyBlue</material>
		<!--<turnGravityOff>false</turnGravityOff>-->
	</gazebo>
	
	<!-- Pedana 1 -->
	<gazebo reference="pedana1">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>

	<!-- Pedana 2 -->
	<gazebo reference="pedana2">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>
	
	<!-- Sedile -->
	<gazebo reference="sedile">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>
	
	<!-- Schienale -->
	<gazebo reference="schienale">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>

	<!-- Bracciolo DX-->
	<gazebo reference="bracciolo_dx">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>

	<!-- Bracciolo SX-->
	<gazebo reference="bracciolo_sx">
  		<material>Gazebo/DarkGrey</material>
  	</gazebo>
	
	<!-- Supporti -->
	<gazebo reference="supporto1">
  		<material>Gazebo/SkyBlue</material>
  	</gazebo>
	
	<gazebo reference="supporto2">
  		<material>Gazebo/SkyBlue</material>
  	</gazebo>
	
	<!-- Ruote -->
	<gazebo reference="left_wheel">
		<material>Gazebo/Grey</material>
		<kp>1000000.0</kp>
		<kd>10.0</kd>
		<mu1>1.5</mu1>
		<mu2>1.5</mu2>
		<fdir1>1 0 0</fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>
	</gazebo>
	
	<gazebo reference="right_wheel">
		<material>Gazebo/Grey</material>	
		<kp>1000000.0</kp>
		<kd>1.0</kd>
		<mu1>1</mu1>
		<mu2>1</mu2>
		<fdir1>1 0 0</fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>	
	</gazebo>
	
	<!-- Caster -->
	<gazebo reference="left_castor_wheel_link">
		<material>Gazebo/Grey</material>
		<kp>1000000.0</kp>
		<kd>1.0</kd>
		<mu1>0.25</mu1>
		<mu2>0.25</mu2>
		<fdir1>1 0 0</fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>	
	</gazebo>
	
	<gazebo reference="right_castor_wheel_link">
		<material>Gazebo/Grey</material>	
		<kp>1000000.0</kp>
		<kd>1.0</kd>
		<mu1>0.25</mu1>
		<mu2>0.25</mu2>
		<fdir1>1 0 0</fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>	
	</gazebo>
	
	<gazebo reference="left_castor_mount_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
	
	<gazebo reference="right_castor_mount_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
	
	<gazebo reference="left_castor_dummy_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
	
	<gazebo reference="right_castor_dummy_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>
	
	
	
<!-- ##################################################################### -->
	
	<!-- SENSORS -->
	

	<!-- Hokuyo -->
	<gazebo reference="hokuyo_link">
		<material>Gazebo/Black</material>
		<!-- <turnGravityOff>false</turnGravityOff> -->
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>${hokuyo_size/2} 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>${hokuyo_rate}</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>682</samples><!-- 240 gradi formati da step di circa 0.3515625 -->
						<resolution>1</resolution>
						<min_angle>-2.0944</min_angle> <!-- -120 gradi-->
						<max_angle>2.0944</max_angle> <!-- +120 gradi-->
					</horizontal>
				</scan>
				<range>
					<min>0.1</min>
					<max>4.0</max>
					<resolution>0.001</resolution>
				</range>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>/scan</topicName>
				<frameName>hokuyo_link</frameName>
			</plugin>
		</sensor>
	</gazebo>


	<!-- Imu -->	
	<!-- NB: nel plugin standard non sono supportati valori differenti di rumore per ang_vel, lin_acc, e orientamento. Va usato il plugin di hector per maggiori opzioni -->
	<gazebo reference="imu_link">
		<material>Gazebo/Orange</material>
		<!-- <turnGravityOff>false</turnGravityOff> -->
		<sensor type="imu" name="imu_sensor">
		<!-- Sono supportati solo in sdf 
			<imu>
				<angular_velocity>
					<x>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>2e-4</stddev>
						<bias_mean>0.0000075</bias_mean>
						<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>2e-4</stddev>
						<bias_mean>0.0000075</bias_mean>
						<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>2e-4</stddev>
						<bias_mean>0.0000075</bias_mean>
						<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</z>
				</angular_velocity>
				<linear_acceleration>
					<x>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>1.7e-2</stddev>
						<bias_mean>0.1</bias_mean>
						<bias_stddev>0.001</bias_stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>1.7e-2</stddev>
						<bias_mean>0.1</bias_mean>
						<bias_stddev>0.001</bias_stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>1.7e-2</stddev>
						<bias_mean>0.1</bias_mean>
						<bias_stddev>0.001</bias_stddev>
						</noise>
					</z>
				</linear_acceleration>
			</imu> 
			-->
			<pose>0 0 0 0 0 0</pose>
			<update_rate>${imu_rate}</update_rate>
    		<plugin name="gazebo_ros_imu_controller" filename="libgazebo_ros_imu_sensor.so"> 
				<alwaysOn>true</alwaysOn>
				<topicName>/imu/data</topicName>
    	  		<frameName>imu_link</frameName>
				<updateRateHZ>${imu_rate}</updateRateHZ>
    	  		<bodyName>imu_link</bodyName>
				<serviceName>imu/calibrate</serviceName>
    	  		<gaussianNoise>0.001</gaussianNoise> 
    	  		<rpyOffset>0 0 0</rpyOffset> 
				<initialOrientationAsReference>false</initialOrientationAsReference>
    		</plugin>
    	</sensor> 
  	</gazebo>
   
   
	<!-- Camera -->	
	<gazebo reference="camera_link">
		<material>Gazebo/Red</material>
		<sensor type="camera" name="camera_sensor">
		  <update_rate>${camera_rate}</update_rate>
		  <camera>
			<horizontal_fov>1.047197551</horizontal_fov> <!--60 gradi-->
			<image>
			  <width>640</width>
			  <height>480</height>
			  <format>R8G8B8</format>
			</image>
			<clip>
			  <near>0.002</near>
			  <far>300</far>
			</clip>
			<noise>
			  <type>gaussian</type>
			  <mean>0.0</mean>
			  <stddev>0.0</stddev>
			</noise>
		  </camera>
		  <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>20.0</updateRate>
			<cameraName>wchair/camera_sensor</cameraName>
			<imageTopicName>image_raw</imageTopicName>
			<cameraInfoTopicName>camera_info</cameraInfoTopicName>
			<frameName>camera_link</frameName>
			<hackBaseline>0.0</hackBaseline>
			<distortionK1>0.0</distortionK1>
			<distortionK2>0.0</distortionK2>
			<distortionK3>0.0</distortionK3>
			<distortionT1>0.0</distortionT1>
			<distortionT2>0.0</distortionT2>
			<Cx>319.729675</Cx>
			<Cy>238.722791</Cy>
			<focalLength>554.668244</focalLength> <!--matematicamente 554.256258422-->
		  </plugin>
		</sensor>
  </gazebo>

<!-- ##################################################################### -->
	
	<!-- ROS CONTROL -->
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		<legacyModeNS>false</legacyModeNS>
		<robotNamespace>/</robotNamespace>
		</plugin>
	</gazebo>

	<!-- GROUND TRUTH ODOMETRY -->
	<gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>50.0</updateRate>
			<bodyName>base_footprint</bodyName>
			<topicName>/odometry/ground_truth_odom</topicName>
			<gaussianNoise>0.0</gaussianNoise>
			<frameName>map</frameName>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo>
	
	<!-- DIFFERENTIAL DRIVE CONTROLLER -->
	<!-- Sostituito dal diff drive controller di ros control -->
	<!-- <gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<alwaysOn>true</alwaysOn>
			<legacyMode>false</legacyMode>
			<rosDebugLevel>na</rosDebugLevel>
			<robotNamespace>/</robotNamespace>
			<publishWheelTF>false</publishWheelTF>
			<publishWheelJointState>false</publishWheelJointState>
			<publishTf>${with_odom}</publishTf> 	
			<publishOdom>true</publishOdom>
			<updateRate>${encoder_rate}</updateRate>
			<leftJoint>left_wheel_joint</leftJoint>
			<rightJoint>right_wheel_joint</rightJoint>
			<wheelSeparation>${base_y + wheel_height}</wheelSeparation>
			<wheelDiameter>${2*wheel_radius}</wheelDiameter>
			<wheelTorque>30</wheelTorque>
			<wheelAcceleration>1.8</wheelAcceleration>
			<commandTopic>cmd_vel</commandTopic>
			<robotBaseFrame>base_footprint</robotBaseFrame>
			<odometryFrame>odom</odometryFrame> 
			<odometryTopic>odom</odometryTopic>
			<odometrySource>world</odometrySource>
		</plugin>
	</gazebo> -->

</robot>

